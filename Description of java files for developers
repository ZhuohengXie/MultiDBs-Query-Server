
 > MultiDBSQueryServerAPI
 edu.pitt.sis.infsci2711.query.server.rest 

    Catalog Rest Service.java: This file consumes JSON request to add catalog in Presto and provides output in JSON form to indicate 
    catalog is added/ dropped  successfully or not.
    This class has two functions add and drop to process request accordingly.
    |add function : Parameter which function accepts is CatalogViewModel(explained down) and response is in JSON form to reflect record is added or failed.
    |drop function: Parameter which function accepts is CatalogViewModel(explained down) and response is in JSON form to reflect catalog is dropped or failed.
    
    To add incoming catalog request is redirected to CatalogService.java class in business package.
    To drop incoming catalog request is redirected to CatalogService.java at drop function in business package
    ------------------------------------------------------
    QueryRestService.java : This file handles query processing when catalog is added in Presto. How to give input refer to 
    restful-api.brief.txt.This class has three functions to manage query 
    |tableFullContent :Parameter it will take id,tableName and generate corresponding results.
    |runQuery:It will take input as a QueryViewModel(explained below ) and response in JSON form.
    |save    :It will take input as a SaveQueryViewModel and response in JSON form
    
    -------------------------------------------------------------
    edu.pitt.sis.infsci2711.query.server.viewModels: This package contains classes for different models,models holds data .
    |CatalogViewModel.java: This model holds the incoming request to add catalog which is in form of JSON.The datatype present in class are same as incoming JSON elements. 
    |RowViewModel.java:This model represents the rows generated in response of a select query,array of String is data type to hold rows.
    |SchemaViewModel.java:This model represents the columns generated in response of a select query , array of String is data type to hold columns.
    |QueryResultViewModel.java: This model holds the datatype of RowViewmodel and SchemaViewModel to hold the entire result in one object.
    |QueryViewModel.java: This model holds the incoming request of query which is in form of JSON. The datatype is String which holds the query.
    ------------------------------------------------------------------
    >MultiDBSQueryServer
    edu.pitt.sis.infsci2711.query.server.business
    | Catalog Service.java: It is responsible for adding properties file in /etc/catalog folder and update the Prestomatch table with the catalog added.
    | Query Service.java: It services the query such as select, insert. for catalogs.
    ----------------------------------------------------------------
     edu.pitt.sis.infsci2711.query.server.models
     |CatalogModel.java: The model is same as CatalogViewModel in serverAPI package.Request for adding a catalog which is in JSON form is converted to CatalogModel to hold data.
     |QueryResultModel.java:The model holds the result of query, data types is Schema and Array of Row type.The result is in JSON form which is modeled by this class.
     |QueryModel.java:This is model for to hold query in String form.
     |Row.java:This model is to hold rows of Result Set for a query. The datatype is array of Stirng type.
     |Schema.java:This model is to hold values for Column in array of Strings.
     ---------------------------------------------------------------------
     edu.pitt.sis.infsci2711.query.server.utils
     |CatalogFileBulider.java:This file is responsible for adding new properties file in /etc/catalog folder and check that db-type
      is mysql otherwise it will generate error.It has
       --checkconnector function:This function is  responsible for checking db-type which must be mysql,it has boolean return type. 
       -- MySqlConnURL: This function return the url attribute of the properties file.
      Multiple catalog files are created, to maintain uniqueness catalog file name is created with id of the request.
      It also update the matcher table with id's ,filename and db name.
     |CatalogMatcherManager.java:
     |PrestoCmdManager.java:
     --------------------------------------------------------------
     
     edu.pitt.sis.infsci2711.query.server.viewmodels
     |RegisterViewModel:
   
   
